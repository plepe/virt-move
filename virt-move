#!/bin/bash

# Default values
SRC_VG=lvm
DEST_VG=lvm
BLOCKSIZE=4194304

TEMP=`getopt -o h --long help,src-vg:,dest-vg: -n 'virt-move' -- "$@"`
eval set -- "${TEMP}"

# from: http://www.bahmanm.com/blogs/command-line-options-how-to-parse-in-bash-using-getopt
while true ; do
  case "$1" in
    -h|--help) SHOW_HELP=1 ; shift ;;
    --src-vg)
      case "$2" in
	"") shift 2 ;;
	*) SRC_VG=$2 ; shift 2 ;;
      esac ;;
    --dest-vg)
      case "$2" in
	"") shift 2 ;;
	*) DEST_VG=$2 ; shift 2 ;;
      esac ;;
    --) shift ; break ;;
    *) echo "Internal error!" ; exit 1 ;;
  esac
done

if [ "$1" == "" -o "$2" == "" -o "${SHOW_HELP}" == "1" ] ; then
  echo "Usage: virt-move [options] <vm> <host>"
  echo "Move a virtual machine <vm> to a different <host>"
  echo
  echo "Available options:"
  echo "  -h, --help                  Show help and exit"
  echo "  --src-vg=<name>             Identifier of LVM volume group on source host"
  echo "                                (default: lvm)"
  echo "  --dest-vg=<name>            Identifier of LVM volume group on destination"
  echo "                                host (default: lvm)"
  echo

  exit 0
fi

VM=$1
HOST=$2

echo "Moving ${VM} to ${HOST}. Ok?"
read

SOURCE_LV=/dev/${SRC_VG}/${VM}
if [ "${SOURCE_LV}" == "" ] ; then
  echo "No source logical volume detected."
  exit
fi

BLOCKS=`lvdisplay ${SOURCE_LV} | grep "Current LE" | cut -b26-`
SIZE=`echo "${BLOCKSIZE} * ${BLOCKS}" | bc`
echo "- Source volumne ${SOURCE_LV} has ${BLOCKS} blocks"

echo "* Check destination host"
CHECK=`ssh root@${HOST} "if [ -e /dev/${DEST_VG}/${VM} ] ; then echo \"- Logical volumne already exists on destination host\" ; fi"`
if [ "${CHECK}" != "" ] ; then
  echo ${CHECK}
  exit 1
fi
CHECK=`ssh root@${HOST} "if [ -e /etc/libvirt/qemu/${VM}.xml -o -e /etc/libvirt/qemu/autostart/${VM}.xml ] ; then echo \"- VM configuration already exists on destination host\" ; fi"`
if [ "${CHECK}" != "" ] ; then
  echo ${CHECK}
  exit 1
fi

echo "- VM does not exist on destinaton host"

echo "* Creating snapshot volume ${SNAPSHOT_LV}"
SNAPSHOT_LV=/dev/${SRC_VG}/${VM}_virt_move
lvcreate -n${VM}_virt_move -s -L1G ${SOURCE_LV}
if [ "$?" != "0" ] ; then
  echo "Failure creating snapshot volume"
  exit 1
fi

echo "* Copying VM configuration"
tar cf - /etc/libvirt/qemu/${VM}.xml /etc/libvirt/qemu/autostart/${VM}.xml | ssh root@${HOST} "cd / ; tar xf -"
ssh root@${HOST} "virsh define /etc/libvirt/qemu/${VM}.xml"
if [ "$?" != "0" ] ; then
  echo "Failure defining host on destination"
  exit 1
fi

echo "* Creating destination volume"
ssh root@${HOST} "lvcreate -l${BLOCKS} -n${VM} ${DEST_VG}"
if [ "$?" != "0" ] ; then
  echo "Failure creating destination logical volume"
  exit 1
fi
DEST_LV=/dev/${DEST_VG}/${VM}

echo "* Copying snapshot"
dd bs=1M if=${SNAPSHOT_LV} | pv -s${SIZE} -B1M | ssh -C root@${HOST} "dd bs=1M of=${DEST_LV}"
if [ "$?" != "0" ] ; then
  echo "Failure copying snapshot"
  exit 1
fi

echo "* Powering down VM"
virsh shutdown ${VM}

echo "* Waiting for VM to be shut off"
TEST="true"
while [ "${TEST}" != "" ] ; do
  TEST=`virsh list | tail -n+3 | cut -b 5-25 | sed 's/ *$//' | grep -x ${VM}`
  sleep 1
done

echo "* Transfering filesystem changes"
lvs ${SNAPSHOT_LV}
lvmsync ${SNAPSHOT_LV} ${HOST}:${DEST_LV}
if [ "$?" != "0" ] ; then
  echo "Failure syncing filesystem changes"
  exit 1
fi

echo "* Starting VM on ${HOST}"
ssh root@${HOST} "virsh start ${VM}"
if [ "$?" != "0" ] ; then
  echo "Failure starting VM"
  exit 1
fi
